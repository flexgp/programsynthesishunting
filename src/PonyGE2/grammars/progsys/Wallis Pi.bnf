<predefined> ::= 'i0 = int(); i1 = int(); i2 = int()'
'b0 = bool(); b1 = bool(); b2 = bool()'
'f0 = float(); f1 = float(); f2 = float()'
'res0 = float()'
<code>
<code> ::= <code><statement>'\n'|<statement>'\n'
<statement> ::= <assign>|<compound_stmt>
<compound_stmt> ::= <if>|'loopBreak% = 0\nwhile '<bool>':{:\n'<code>'\nif loopBreak% > loopBreakConst or stop:{:\nbreak\n:}loopBreak% += 1\n:}'
<assign> ::= <bool_var>' = '<bool>|<int_assign>|<float_assign>
<number> ::= <number><num>|<num>
<num> ::= '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'
<comp_op> ::= '<'|'>'|'=='|'>='|'<='|'!='|'is'|'is not'
<bool_var> ::= 'b0'|'b1'|'b2'
<bool> ::= <bool_var>|<bool_const>|'not '<bool>|'( '<bool>' '<bool_op>' '<bool>' )'|<int>' '<comp_op>' '<int>|<float>' '<comp_op>' '<float>|<int>' '<comp_op>' '<float>|<float>' '<comp_op>' '<int>
<bool_op> ::= 'and'|'or'
<bool_const> ::= 'True'|'False'
<if> ::= 'if '<bool>':{:\n'<code>':}'|'if '<bool>':{:\n'<code>':}else:{:\n'<code>':}'
<int_var> ::= 'i0'|'i1'|'i2'|'in0'
<int_assign> ::= <int_var>' = '<int>|<int_var>' '<arith_ops>'= '<int>
<int> ::= <int_var>|'int('<number>'.0)'|<arith_prefix><int>|'( '<int>' '<arith_ops>' '<int>' )'|<int_arith_ops_protected>'('<int>','<int>')'|'min('<int>', '<int>')'|'max('<int>', '<int>')'|'abs('<int>')'|'int(math.ceil('<float>'))'|'int(math.floor('<float>'))'|'int(round('<float>'))'|'int('<float>')'
<arith_ops> ::= '+'|'-'|'*'
<int_arith_ops_protected> ::= 'divInt'|'mod'
<arith_prefix> ::= '+'|'-'
<float> ::= <int>|<float_var>|<number>'.'<number>|<arith_prefix><float>|'( '<float>' '<arith_ops>' '<float>' )'|'( '<int>' '<arith_ops>' '<float>' )'|'( '<float>' '<arith_ops>' '<int>' )'|<float_arith_ops_protected>'('<float>','<float>')'|<float_arith_ops_protected>'('<int>','<float>')'|<float_arith_ops_protected>'('<float>','<int>')'|'math.ceil('<float>')'|'math.floor('<float>')'|'round('<float>')'|'min('<float>', '<float>')'|'min('<int>', '<float>')'|'min('<float>', '<int>')'|'max('<float>', '<float>')'|'max('<int>', '<float>')'|'max('<float>', '<int>')'|'abs('<float>')'
<float_var> ::= 'f0'|'f1'|'f2'|'res0'
<float_assign> ::= <float_var>' = '<float>|<float_var>' '<arith_ops>'= '<float>
<float_arith_ops_protected> ::= 'div'|'divInt'|'mod'
